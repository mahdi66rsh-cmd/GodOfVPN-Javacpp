name: Build & Run Java+CPP (Windows)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Compile Java and generate JNI headers
      - name: Compile Java & generate JNI headers
        shell: bash
        run: |
          mkdir -p target/classes cpp_core/include
          javac -h cpp_core/include -d target/classes $(git ls-files "java_cli/src/**/*.java")

      # Use MSVC toolchain explicitly in x64 mode
      - name: MSVC Dev Cmd (x64)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # Build 64-bit DLL
      - name: Build C++ DLL (x64)
        shell: cmd
        run: |
          set JH=%JAVA_HOME%
          rem /LD -> DLL, include paths to JDK headers
          cl /std:c++17 /EHsc ^
             /I"%JH%\include" /I"%JH%\include\win32" /I"cpp_core\include" ^
             /LD cpp_core\src\core.cpp ^
             /link /OUT:cpp_core\libcore.dll

      # Package outputs
      - name: Package JAR + runner
        shell: pwsh
        run: |
          jar --create --file target/app.jar -C target/classes .
          "@echo off`r`njava -Djava.library.path=cpp_core -cp target/app.jar com.example.app.Main`r`n" | Set-Content -Path run.bat -Encoding ASCII
          Compress-Archive -Path target/app.jar, cpp_core\libcore.dll, run.bat -DestinationPath build-output.zip -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build-output.zip
            target/app.jar
            cpp_core/libcore.dll
            run.bat
